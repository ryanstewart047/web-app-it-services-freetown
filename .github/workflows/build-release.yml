name: Build and Release Desktop App

on:
  push:
    tags:
      - 'v*' # Triggers on version tags like v1.0.0, v1.0.1, etc.
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        working-directory: ./desktop-app
        run: npm install
        
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        working-directory: ./desktop-app
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build macOS
        if: matrix.os == 'macos-latest'
        working-directory: ./desktop-app
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        working-directory: ./desktop-app
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Upload Windows Artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installers
          path: |
            desktop-app/dist/*.exe
            desktop-app/dist/*.msi
          retention-days: 5
          
      - name: Upload macOS Artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-installers
          path: |
            desktop-app/dist/*.dmg
            desktop-app/dist/*.zip
          retention-days: 5
          
      - name: Upload Linux Artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-installers
          path: |
            desktop-app/dist/*.AppImage
            desktop-app/dist/*.deb
          retention-days: 5

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: Display structure of downloaded files
        run: ls -R ./artifacts
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: IT Services Device Detector ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false
          body: |
            # IT Services Device Detector - Desktop Application ${{ github.ref_name }}
            
            Professional Android device detection with full ADB integration. Get complete device information including IMEI and 50+ properties!
            
            ## ‚ú® Features
            
            - **Complete Device Info**: Model, manufacturer, brand, serial number
            - **IMEI Access**: Both SIM 1 and SIM 2 (requires ADB)
            - **Hardware Details**: CPU, board, bootloader, display specs
            - **Memory & Storage**: RAM, internal storage, SD card info
            - **Battery Stats**: Level, health, temperature, voltage, status
            - **Network Info**: WiFi MAC address, IP address
            - **Export Data**: Save as JSON or TXT files
            - **100% Private**: All processing happens locally, no data sent to servers
            - **Beautiful UI**: Dark mode interface with smooth animations
            
            ## üì• Downloads
            
            ### Windows
            
            - **IT-Services-Device-Detector-Setup-1.0.0.exe** (Recommended)
              - Standard Windows installer with Start Menu shortcuts
              - Just download and run - easy installation wizard
            
            - **IT Services Device Detector-1.0.0.exe** (Portable)
              - No installation required - runs directly
              - Perfect for USB drives or temporary use
            
            ### macOS
            
            - **IT-Services-Device-Detector-1.0.0.dmg** (Recommended)
              - Standard macOS installer
              - Drag to Applications folder
              - **Note**: May need to allow in System Preferences ‚Üí Security
            
            - **IT-Services-Device-Detector-1.0.0-mac.zip**
              - Compressed app bundle
              - Extract and drag to Applications
            
            ### Linux
            
            - **IT Services Device Detector-1.0.0.AppImage** (Recommended)
              - Universal Linux installer
              - Works on Ubuntu, Fedora, Debian, Arch, etc.
              - Make executable: `chmod +x "IT Services Device Detector-1.0.0.AppImage"`
              - Run: `./IT\ Services\ Device\ Detector-1.0.0.AppImage`
            
            - **it-services-device-detector_1.0.0_amd64.deb**
              - For Debian/Ubuntu/Linux Mint
              - Install: `sudo dpkg -i it-services-device-detector_1.0.0_amd64.deb`
            
            ## ‚öôÔ∏è Requirements
            
            - **ADB (Android Debug Bridge)** must be installed
            - USB cable to connect Android device
            - USB Debugging enabled on Android device
            
            ## üöÄ Quick Start
            
            1. Install ADB on your system ([Guide](https://developer.android.com/tools/adb))
            2. Download and install the app for your OS
            3. Enable USB Debugging on your Android device
            4. Connect device via USB
            5. Launch the app - it will detect your device automatically!
            
            ## üîê Security & Privacy
            
            - ‚úÖ All processing happens locally on your computer
            - ‚úÖ No internet connection required (after download)
            - ‚úÖ No data sent to any servers
            - ‚úÖ IMEI and sensitive data stay on your device
            - ‚úÖ Open source code - you can verify everything
            
            ## üíª Build from Source
            
            Want to build it yourself?
            
            ```bash
            git clone https://github.com/ryanstewart047/web-app-it-services-freetown.git
            cd web-app-it-services-freetown/desktop-app
            npm install
            npm start
            ```
            
            ## üôè Credits
            
            Developed by **IT Services Freetown**  
            Professional IT solutions and device diagnostics
            
            ## üìÑ License
            
            MIT License - Free and open source
            
            ---
            
            **Need help?** Visit our [website](https://itservicesfreetown.com) or check the documentation.
          files: |
            ./artifacts/windows-installers/*
            ./artifacts/macos-installers/*
            ./artifacts/linux-installers/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
